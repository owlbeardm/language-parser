-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Extra typeclass instances for mono-traversable
--   
--   Please see README.md
@package mono-traversable-instances
@version 0.1.0.0

module Data.MonoTraversable.Instances
instance Data.MonoTraversable.MonoFoldable (Data.DList.DList a)
instance Data.MonoTraversable.MonoTraversable (Data.DList.DList a)
instance Data.MonoTraversable.MonoFunctor (Data.DList.DList a)
instance Data.MonoTraversable.MonoPointed (Data.DList.DList a)
instance Data.MonoTraversable.GrowingAppend (Data.DList.DList a)
instance Data.Sequences.SemiSequence (Data.DList.DList a)
instance Data.Sequences.IsSequence (Data.DList.DList a)
instance Data.MonoTraversable.MonoFunctor (Control.Comonad.Cokleisli w a b)
instance Data.MonoTraversable.MonoPointed (Control.Comonad.Cokleisli w a b)
instance GHC.Base.Applicative f => Data.MonoTraversable.MonoPointed (Data.Functor.Bind.Class.WrappedApplicative f a)
instance GHC.Base.Functor f => Data.MonoTraversable.MonoFunctor (Data.Functor.Bind.Class.WrappedApplicative f a)
instance GHC.Base.Functor f => Data.MonoTraversable.MonoFunctor (Data.Functor.Bind.Class.MaybeApply f a)
instance Data.MonoTraversable.MonoPointed (Data.Functor.Bind.Class.MaybeApply f a)
instance (Control.Comonad.Comonad w, GHC.Base.Monoid m) => Data.MonoTraversable.MonoComonad (Control.Comonad.Trans.Traced.TracedT m w a)
instance GHC.Base.Functor w => Data.MonoTraversable.MonoFunctor (Control.Comonad.Trans.Traced.TracedT m w a)
instance Control.Comonad.Comonad w => Data.MonoTraversable.MonoComonad (Control.Comonad.Trans.Store.StoreT s w a)
instance GHC.Base.Functor w => Data.MonoTraversable.MonoFunctor (Control.Comonad.Trans.Store.StoreT s w a)
instance Control.Comonad.Comonad w => Data.MonoTraversable.MonoComonad (Control.Comonad.Trans.Env.EnvT e w a)
instance GHC.Base.Functor w => Data.MonoTraversable.MonoFunctor (Control.Comonad.Trans.Env.EnvT e w a)
instance GHC.Base.Applicative f => Data.MonoTraversable.MonoPointed (Data.Semigroupoid.Static.Static f a b)
instance GHC.Base.Functor f => Data.MonoTraversable.MonoFunctor (Data.Semigroupoid.Static.Static f a b)
instance Control.Comonad.Comonad w => Data.MonoTraversable.MonoComonad (Control.Monad.Trans.Identity.IdentityT w a)
instance Data.MonoTraversable.MonoComonad (Data.Tree.Tree a)
instance Data.MonoTraversable.MonoComonad (GHC.Base.NonEmpty a)
instance Data.MonoTraversable.MonoComonad (Data.Functor.Identity.Identity a)
instance GHC.Base.Monoid m => Data.MonoTraversable.MonoComonad (m -> a)
instance Data.MonoTraversable.MonoComonad (e, a)
instance Data.MonoTraversable.MonoComonad (Data.Semigroup.Arg a b)
